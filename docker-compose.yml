services:
  api:
    build: .
    container_name: agent_api
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import requests; r = requests.get('http://localhost:8000/health'); assert r.status_code == 200\""]
      interval: 5s
      timeout: 3s
      retries: 5

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: agent_ui
    env_file: .env
    ports:
      - "8501:8501"
    depends_on:
      api:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql  # <-- mount init script
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql  # <-- mount init script
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  postgres_data:



















# services:
#   api:
#     build: .
#     container_name: agent_api
#     env_file: .env
#     ports:
#       - "8000:8000"
#     depends_on:
#       mysql:
#         condition: service_healthy
#       postgres:
#         condition: service_healthy
#     healthcheck:
#       test: ["CMD-SHELL", "python -c \"import requests; r = requests.get('http://localhost:8000/health'); assert r.status_code == 200\""]
#       interval: 5s
#       timeout: 3s
#       retries: 5

#   ui:
#     build:
#       context: .
#       dockerfile: Dockerfile.ui
#     container_name: agent_ui
#     env_file: .env
#     ports:
#       - "8501:8501"
#     depends_on:
#       api:
#         condition: service_healthy

#   mysql:
#     image: mysql:8.0
#     container_name: mysql
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_DATABASE: ${MYSQL_DB}
#     ports:
#       - "3307:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql
#     healthcheck:
#       test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   postgres:
#     image: postgres:15
#     container_name: postgres
#     restart: always
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

# volumes:
#   mysql_data:
#   postgres_data:
